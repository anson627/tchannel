{
  "name": "airlock",
  "version": "2.1.1",
  "description": "A prober to probe HTTP based backends for health",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/uber/airlock.git"
  },
  "main": "index",
  "homepage": "https://github.com/uber/airlock",
  "bugs": {
    "url": "https://github.com/uber/airlock/issues",
    "email": "raynos2@gmail.com"
  },
  "collaborators": [
    {
      "name": "jeff wolski"
    },
    {
      "name": "markyen"
    }
  ],
  "dependencies": {},
  "devDependencies": {
    "benchmark": "^1.0.0",
    "istanbul": "~0.1.46",
    "lodash.times": "~2.4.1",
    "mocha": "~1.15.1",
    "time-mock": "~0.1.2"
  },
  "scripts": {
    "test": "npm run jshint && mocha --reporter tap ./test 2>&1 | tee ./test/test.js.tap",
    "jshint": "jshint --verbose .",
    "cover": "istanbul cover --report none --print detail _mocha -- test --reporter tap",
    "view-cover": "istanbul report html && open ./coverage/index.html"
  },
  "engine": {
    "node": ">= 0.8.x"
  },
  "readme": "# airlock\n\nA prober to probe HTTP based backends for health\n\n## Example\n\n```js\nvar Prober = require(\"airlock\")\n\nvar prober = new Prober({\n    title: 'probe interface',\n    statsd: { increment: function (key) {\n        // send increment command to a statsd server.\n    } },\n    logger: {\n        warn: function (message) {\n            /* sink this message to your logging system */\n        }\n    }\n})\n\nvar thunk = request.bind(null, {\n    uri: 'http://www.example.com/foo',\n    method: 'POST',\n    json: { ... }\n})\nprober.probe(thunk, function (err, res, body) {\n    /* we probed the async task and have the result\n        if the async task fails a lot then the prober\n        automatically rate limits\n    */\n})\n```\n\n## Installation\n\n`npm install airlock`\n\n## Contributors\n\n - Raynos\n - markyen\n - jwolski\n\n## MIT Licenced\n",
  "readmeFilename": "README.md",
  "_id": "airlock@2.1.1",
  "_shasum": "c0c306fa89e014d62320ac4be681b231452ddc12",
  "_resolved": "http://archive.local.uber.internal/npm/airlock/airlock-2.1.1.tgz",
  "_from": "airlock@>=2.1.1 <3.0.0"
}
